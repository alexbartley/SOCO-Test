CREATE OR REPLACE TRIGGER sbxtax."UPD_A_COMP_AREA_AUTHORITIES"
AFTER UPDATE of
AUTHORITY_ID,
COMPLIANCE_AREA_AUTH_ID,
COMPLIANCE_AREA_ID on sbxtax.TB_COMP_AREA_AUTHORITIES
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
      WHEN (
  ( decode(NEW.AUTHORITY_ID,OLD.AUTHORITY_ID,0,1) +
decode(NEW.COMPLIANCE_AREA_AUTH_ID,OLD.COMPLIANCE_AREA_AUTH_ID,0,1) +
decode(NEW.COMPLIANCE_AREA_ID,OLD.COMPLIANCE_AREA_ID,0,1)
  ) > 0

) BEGIN


  INSERT INTO A_COMP_AREA_AUTHORITIES (
 AUTHORITY_ID,
COMPLIANCE_AREA_AUTH_ID,
COMPLIANCE_AREA_ID,
CREATED_BY,
CREATION_DATE,
LAST_UPDATED_BY,
LAST_UPDATE_DATE,
AUTHORITY_ID_O,
COMPLIANCE_AREA_AUTH_ID_O,
COMPLIANCE_AREA_ID_O,
CREATED_BY_O,
CREATION_DATE_O,
LAST_UPDATED_BY_O,
LAST_UPDATE_DATE_O,
    CHANGE_TYPE,
    --CHANGE_VERSION,
    CHANGE_DATE
  ) VALUES (
  :NEW.AUTHORITY_ID,
:NEW.COMPLIANCE_AREA_AUTH_ID,
:NEW.COMPLIANCE_AREA_ID,
:NEW.CREATED_BY,
:NEW.CREATION_DATE,
:NEW.LAST_UPDATED_BY,
:NEW.LAST_UPDATE_DATE,

 :OLD.AUTHORITY_ID,
:OLD.COMPLIANCE_AREA_AUTH_ID,
:OLD.COMPLIANCE_AREA_ID,
:OLD.CREATED_BY,
:OLD.CREATION_DATE,
:OLD.LAST_UPDATED_BY,
:OLD.LAST_UPDATE_DATE,
    'UPDATED',
    --(SELECT CONTENT_VERSION FROM TB_MERCHANTS WHERE MERCHANT_ID = :NEW.MERCHANT_ID),
    SYSDATE);

END;
/