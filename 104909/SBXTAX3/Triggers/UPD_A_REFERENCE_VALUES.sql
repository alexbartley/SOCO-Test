CREATE OR REPLACE TRIGGER sbxtax3."UPD_A_REFERENCE_VALUES" 
AFTER UPDATE OF
REFERENCE_LIST_ID,
VALUE,
START_DATE,
END_DATE
ON sbxtax3.TB_REFERENCE_VALUES
REFERENCING OLD AS OLD NEW AS NEW 
FOR EACH ROW 
     WHEN (
(
decode(NEW.REFERENCE_LIST_ID,OLD.REFERENCE_LIST_ID,0,1) +
decode(NEW.VALUE,OLD.VALUE,0,1) +
decode(NEW.START_DATE,OLD.START_DATE,0,1) +
decode(NEW.END_DATE,OLD.END_DATE,0,1)
) > 0
) BEGIN
  INSERT INTO A_REFERENCE_VALUES (
REFERENCE_VALUE_ID,
REFERENCE_LIST_ID,
VALUE,
START_DATE,
END_DATE,
CREATED_BY,
CREATION_DATE,
LAST_UPDATED_BY,
LAST_UPDATE_DATE,
--SYNCHRONIZATION_TIMESTAMP,
REFERENCE_VALUE_ID_O,
REFERENCE_LIST_ID_O,
VALUE_O,
START_DATE_O,
END_DATE_O,
CREATED_BY_O,
CREATION_DATE_O,
LAST_UPDATED_BY_O,
LAST_UPDATE_DATE_O,
--SYNCHRONIZATION_TIMESTAMP_O,
CHANGE_TYPE,
--CHANGE_VERSION,
CHANGE_DATE
  ) VALUES (
:NEW.REFERENCE_VALUE_ID,
:NEW.REFERENCE_LIST_ID,
:NEW.VALUE,
:NEW.START_DATE,
:NEW.END_DATE,
:NEW.CREATED_BY,
:NEW.CREATION_DATE,
:NEW.LAST_UPDATED_BY,
:NEW.LAST_UPDATE_DATE,
--:NEW.SYNCHRONIZATION_TIMESTAMP,
:OLD.REFERENCE_VALUE_ID,
:OLD.REFERENCE_LIST_ID,
:OLD.VALUE,
:OLD.START_DATE,
:OLD.END_DATE,
:OLD.CREATED_BY,
:OLD.CREATION_DATE,
:OLD.LAST_UPDATED_BY,
:OLD.LAST_UPDATE_DATE,
--:OLD.SYNCHRONIZATION_TIMESTAMP,
    'UPDATED',
    --(SELECT CONTENT_VERSION FROM TB_MERCHANTS M, TB_REFERENCE_LISTS RL WHERE M.MERCHANT_ID = RL.MERCHANT_ID AND RL.REFERENCE_LIST_ID = :NEW.REFERENCE_LIST_ID),
    SYSDATE);
END;
/